// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservaQuadras.Models;

namespace ReservaQuadras.Migrations
{
    [DbContext(typeof(ReservaQuadraContext))]
    [Migration("20180823194822_SeedTipo")]
    partial class SeedTipo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReservaQuadras.Models.Atletica", b =>
                {
                    b.Property<int>("AtleticaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("AtleticaID");

                    b.ToTable("Atleticas");
                });

            modelBuilder.Entity("ReservaQuadras.Models.DiaDaSemana", b =>
                {
                    b.Property<int>("DiaDaSemanaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dia");

                    b.HasKey("DiaDaSemanaID");

                    b.ToTable("DiaDaSemana");

                    b.HasData(
                        new { DiaDaSemanaID = 1, Dia = "Segunda-Feira" },
                        new { DiaDaSemanaID = 2, Dia = "Terça-Feira" },
                        new { DiaDaSemanaID = 3, Dia = "Quarta-Feira" },
                        new { DiaDaSemanaID = 4, Dia = "Quinta-Feira" },
                        new { DiaDaSemanaID = 5, Dia = "Sexta-Feira" },
                        new { DiaDaSemanaID = 6, Dia = "Sábado" },
                        new { DiaDaSemanaID = 7, Dia = "Domingo" }
                    );
                });

            modelBuilder.Entity("ReservaQuadras.Models.EspacoFisico", b =>
                {
                    b.Property<int>("EspacoFisicoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsLiberado");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("EspacoFisicoID");

                    b.ToTable("EspacoFisico");
                });

            modelBuilder.Entity("ReservaQuadras.Models.Horario", b =>
                {
                    b.Property<int>("HorarioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiaID");

                    b.Property<int>("EspacoFisicoID");

                    b.Property<TimeSpan>("HoraFim");

                    b.Property<TimeSpan>("HoraInicio");

                    b.Property<int?>("ReservaID");

                    b.HasKey("HorarioID");

                    b.HasIndex("DiaID");

                    b.HasIndex("EspacoFisicoID");

                    b.HasIndex("ReservaID");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("ReservaQuadras.Models.Pessoa", b =>
                {
                    b.Property<int>("PessoaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Vinculo")
                        .IsRequired();

                    b.HasKey("PessoaID");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("ReservaQuadras.Models.PessoaAtletica", b =>
                {
                    b.Property<int>("PessoaAtleticaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtleticaID");

                    b.Property<int>("PessoaID");

                    b.HasKey("PessoaAtleticaID");

                    b.HasIndex("AtleticaID");

                    b.HasIndex("PessoaID");

                    b.ToTable("PessoaAtleticas");
                });

            modelBuilder.Entity("ReservaQuadras.Models.PessoaProjeto", b =>
                {
                    b.Property<int>("PessoaProjetoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PessoaID");

                    b.Property<int>("ProjetoID");

                    b.HasKey("PessoaProjetoID");

                    b.HasIndex("PessoaID");

                    b.HasIndex("ProjetoID");

                    b.ToTable("PessoaProjeto");
                });

            modelBuilder.Entity("ReservaQuadras.Models.Projeto", b =>
                {
                    b.Property<int>("ProjetoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("ProjetoID");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("ReservaQuadras.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Descricao");

                    b.Property<int>("PessoaID");

                    b.Property<int>("TipoID");

                    b.HasKey("ReservaID");

                    b.HasIndex("PessoaID");

                    b.HasIndex("TipoID");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("ReservaQuadras.Models.TipoReserva", b =>
                {
                    b.Property<int>("TipoReservaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("MaxHoras");

                    b.Property<string>("Nome");

                    b.HasKey("TipoReservaID");

                    b.ToTable("TipoReserva");

                    b.HasData(
                        new { TipoReservaID = 1, MaxHoras = 2f, Nome = "Comunidade" },
                        new { TipoReservaID = 2, MaxHoras = 10f, Nome = "Atlética" },
                        new { TipoReservaID = 3, Nome = "Projeto" }
                    );
                });

            modelBuilder.Entity("ReservaQuadras.Models.Horario", b =>
                {
                    b.HasOne("ReservaQuadras.Models.DiaDaSemana", "Dia")
                        .WithMany()
                        .HasForeignKey("DiaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReservaQuadras.Models.EspacoFisico", "EspacoFisico")
                        .WithMany("Horarios")
                        .HasForeignKey("EspacoFisicoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReservaQuadras.Models.Reserva")
                        .WithMany("Horarios")
                        .HasForeignKey("ReservaID");
                });

            modelBuilder.Entity("ReservaQuadras.Models.PessoaAtletica", b =>
                {
                    b.HasOne("ReservaQuadras.Models.Atletica", "Atletica")
                        .WithMany("PessoaAtletica")
                        .HasForeignKey("AtleticaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReservaQuadras.Models.Pessoa", "Pessoa")
                        .WithMany("PessoaAtletica")
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReservaQuadras.Models.PessoaProjeto", b =>
                {
                    b.HasOne("ReservaQuadras.Models.Pessoa", "Pessoa")
                        .WithMany("PessoaProjeto")
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReservaQuadras.Models.Projeto", "Projeto")
                        .WithMany("PessoaProjeto")
                        .HasForeignKey("ProjetoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ReservaQuadras.Models.Reserva", b =>
                {
                    b.HasOne("ReservaQuadras.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ReservaQuadras.Models.TipoReserva", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
